// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Introspector test schema - 2504 1`] = `
"type DirectMessage @pgTable(name: \\"direct_messages\\") {
  id: Int! @unique
  receiverId: User @pgColumn(name: \\"receiver_id\\")
  senderId: User @pgColumn(name: \\"sender_id\\")
  text: String!
}

type User @pgTable(name: \\"users\\") {
  id: Int! @unique
  # Could not auto-generate backwards relation field, name would be ambigous.
  # Please specify the name of this field and the name of the relation manually.
  # It references DirectMessage.receiverId.
  # directMessages: [DirectMessage]
  # Could not auto-generate backwards relation field, name would be ambigous.
  # Please specify the name of this field and the name of the relation manually.
  # It references DirectMessage.senderId.
  # directMessages: [DirectMessage]
  name: String!
}"
`;

exports[`Introspector test schema - 2504 2`] = `
"type DirectMessage @db(name: \\"direct_messages\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"direct_messages_id_seq\\", initialValue: 1, allocationSize: 1)
  receiverId: User @db(name: \\"receiver_id\\")
  senderId: User @db(name: \\"sender_id\\")
  text: String!
}

type User @db(name: \\"users\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_id_seq\\", initialValue: 1, allocationSize: 1)
  # Could not auto-generate backwards relation field, name would be ambigous.
  # Please specify the name of this field and the name of the relation manually.
  # It references DirectMessage.receiverId.
  # directMessages: [DirectMessage]
  # Could not auto-generate backwards relation field, name would be ambigous.
  # Please specify the name of this field and the name of the relation manually.
  # It references DirectMessage.senderId.
  # directMessages: [DirectMessage]
  name: String!
}"
`;
