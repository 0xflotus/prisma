// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Introspector issue4081 relations 1`] = `
"type About_aboutpage @pgTable(name: \\"about_aboutpage\\") {
  id: Int! @unique
  heading: String!
  heading_image: String!
  text: String!
}

type About_teammember @pgTable(name: \\"about_teammember\\") {
  id: Int! @unique
  description: String!
  facebook_url: String!
  instagram_url: String!
  name: String!
  order: Int!
  page_id: Int!
  picture: String!
  position: String!
  twitter_url: String!
  visible: Boolean!
  youtube_url: String!
}

type Account_emailaddress @pgTable(name: \\"account_emailaddress\\") {
  id: Int! @unique
  email: String!
  primary: Boolean!
  user_id: Int!
  verified: Boolean!
}

type Account_emailconfirmation @pgTable(name: \\"account_emailconfirmation\\") {
  id: Int! @unique
  created: DateTime!
  email_address_id: Int!
  key: String!
  sent: DateTime
}

type Auth_group @pgTable(name: \\"auth_group\\") {
  id: Int! @unique
  name: String!
}

type Auth_group_permission @pgTable(name: \\"auth_group_permissions\\") {
  id: Int! @unique
  group_id: Int!
  permission_id: Int!
}

type Auth_permission @pgTable(name: \\"auth_permission\\") {
  id: Int! @unique
  codename: String!
  content_type_id: Int!
  name: String!
}

type Contact_contactformcontent @pgTable(name: \\"contact_contactformcontent\\") {
  id: Int! @unique
  title: String!
}

type Contact_contactpage @pgTable(name: \\"contact_contactpage\\") {
  id: Int! @unique
  heading: String!
  heading_image: String!
}

type Contact_thankyoupage @pgTable(name: \\"contact_thankyoupage\\") {
  id: Int! @unique
  button_link: String!
  button_text: String!
  heading: String!
  text: String!
  title: String!
}

type Django_admin_log @pgTable(name: \\"django_admin_log\\") {
  id: Int! @unique
  action_flag: Int!
  action_time: DateTime!
  change_message: String!
  content_type_id: Int
  object_id: String
  object_repr: String!
  user_id: Int!
}

type Django_content_type @pgTable(name: \\"django_content_type\\") {
  id: Int! @unique
  app_label: String!
  model: String!
}

type Django_migration @pgTable(name: \\"django_migrations\\") {
  id: Int! @unique
  app: String!
  applied: DateTime!
  name: String!
}

type Django_session @pgTable(name: \\"django_session\\") {
  expire_date: DateTime!
  session_data: String!
  session_key: String!
}

type Django_site @pgTable(name: \\"django_site\\") {
  id: Int! @unique
  domain: String!
  name: String!
}

type Events_event @pgTable(name: \\"events_event\\") {
  id: Int! @unique
  address_line_one: String!
  address_line_two: String!
  city: String!
  country: String!
  date: DateTime!
  hosted_by: String!
  location_name: String!
  map_url: String!
  name: String!
  picture: String!
  # Type time is not supported
  # time: time!
  topic: String!
  visible: Boolean!
}

type Events_eventspage @pgTable(name: \\"events_eventspage\\") {
  id: Int! @unique
  heading_image: String!
}

type Help_helppage @pgTable(name: \\"help_helppage\\") {
  id: Int! @unique
  heading: String!
  heading_image: String!
}

type Help_helpquestion @pgTable(name: \\"help_helpquestion\\") {
  id: Int! @unique
  answer: String!
  order: Int
  section_id: Int!
  thumbnail: String!
  title: String!
}

type Help_helpsection @pgTable(name: \\"help_helpsection\\") {
  id: Int! @unique
  order: Int!
  page_id: Int!
  title: String!
}

type Jobs_job @pgTable(name: \\"jobs_job\\") {
  id: Int! @unique
  apply_page_form_title: String!
  apply_page_title: String!
  order: Int
  page_id: Int!
  picture: String!
  position_description: String!
  position_location: String!
  position_name: String!
  visible: Boolean!
}

type Jobs_jobspage @pgTable(name: \\"jobs_jobspage\\") {
  id: Int! @unique
  heading: String!
  heading_image: String!
  text: String!
}

type Jobs_nojobspage @pgTable(name: \\"jobs_nojobspage\\") {
  id: Int! @unique
  heading: String!
  text: String!
  title: String!
  video_thumbnail: String!
}

type Jobs_thankyoupage @pgTable(name: \\"jobs_thankyoupage\\") {
  id: Int! @unique
  button_link: String!
  button_text: String!
  heading: String!
  text: String!
  title: String!
}

type Landing_landingpage @pgTable(name: \\"landing_landingpage\\") {
  id: Int! @unique
  section_four_image: String!
  section_four_text: String!
  section_four_title: String!
  section_one_image: String!
  section_one_title: String!
  section_three_image: String!
  section_three_text: String!
  section_three_title: String!
  section_two_image: String!
  section_two_text: String!
  section_two_title: String!
}

type Languages_language @pgTable(name: \\"languages_language\\") {
  id: Int! @unique
  language: String!
  language_code: String!
}

type Media_artist @pgTable(name: \\"media_artist\\") {
  id: Int! @unique
  artist: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_category @pgTable(name: \\"media_category\\") {
  id: Int! @unique
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_genre @pgTable(name: \\"media_genre\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  genre: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_media @pgTable(name: \\"media_media\\") {
  id: Int! @unique
  approved: Boolean!
  artist_id: Int!
  created_by_id: Int
  created_date: DateTime
  genre_id: Int
  media_language_id: Int!
  modified_date: DateTime
  note: String!
  region_id: Int
  title: String!
  translation_language_id: Int!
  updated_by_id: Int
}

type Media_media_category @pgTable(name: \\"media_media_categories\\") {
  id: Int! @unique
  category_id: Int!
  media_id: Int!
}

type Media_mediasentence @pgTable(name: \\"media_mediasentence\\") {
  id: Int! @unique
  approved: Boolean!
  created_by_id: Int
  created_date: DateTime
  learning_sentence_id: Int!
  line: Int!
  lyrics_sentence: String!
  lyrics_translation: String!
  lyrics_translation_chunks: String!
  media_id: Int!
  modified_date: DateTime
  multiple: Boolean!
  note: String!
  order: Int!
  place_in_line: Int!
  repeat: Boolean!
  repeat_of_line: Int!
  repeated_in_line: String!
  updated_by_id: Int
  word_count: Int!
}

type Media_region @pgTable(name: \\"media_region\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  region: String!
  updated_by_id: Int
}

type Sentences_customhint @pgTable(name: \\"sentences_customhint\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  hint: String!
  hint_type_id: Int!
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
}

type Sentences_ecast @pgTable(name: \\"sentences_ecast\\") {
  id: Int! @unique
  action_id: Int!
  character_id: Int!
  created_by_id: Int
  created_date: DateTime
  description: String!
  emotion_id: Int!
  modified_date: DateTime
  note: String!
  sentence_id: Int!
  setting_id: Int!
  theme_id: Int
  updated_by_id: Int
}

type Sentences_ecastaction @pgTable(name: \\"sentences_ecastaction\\") {
  id: Int! @unique
  action: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastcharacter @pgTable(name: \\"sentences_ecastcharacter\\") {
  id: Int! @unique
  character: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastemotion @pgTable(name: \\"sentences_ecastemotion\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  emotion: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastsetting @pgTable(name: \\"sentences_ecastsetting\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  setting: String!
  updated_by_id: Int
}

type Sentences_ecasttheme @pgTable(name: \\"sentences_ecasttheme\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  theme: String!
  updated_by_id: Int
}

type Sentences_hint @pgTable(name: \\"sentences_hint\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  hint: String!
  hint_type_id: Int!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_hinttype @pgTable(name: \\"sentences_hinttype\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  type_name: String!
  updated_by_id: Int
}

type Sentences_imagecategory @pgTable(name: \\"sentences_imagecategory\\") {
  id: Int! @unique
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_imagetype @pgTable(name: \\"sentences_imagetype\\") {
  id: Int! @unique
  name: String!
}

type Sentences_posttranslationword @pgTable(name: \\"sentences_posttranslationword\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  language_id: Int
  modified_date: DateTime
  note: String!
  post: String!
  updated_by_id: Int
}

type Sentences_pretranslationword @pgTable(name: \\"sentences_pretranslationword\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  language_id: Int
  modified_date: DateTime
  note: String!
  pre: String!
  updated_by_id: Int
}

type Sentences_sentence @pgTable(name: \\"sentences_sentence\\") {
  id: Int! @unique
  approved: Boolean!
  chunk_id: Int
  created_by_id: Int
  created_date: DateTime
  english_sentence_punctuation_end: String!
  english_sentence_punctuation_start: String!
  fifth_chunk_id: Int
  fifth_order: Boolean!
  fifth_post_id: Int
  fifth_pre_id: Int
  fifth_underlined: Boolean!
  first_chunk_id: Int
  first_order: Boolean!
  first_post_id: Int
  first_pre_id: Int
  first_underlined: Boolean!
  fourth_chunk_id: Int
  fourth_order: Boolean!
  fourth_post_id: Int
  fourth_pre_id: Int
  fourth_underlined: Boolean!
  learning_language_id: Int
  learning_sentence_punctuation_end: String!
  learning_sentence_punctuation_start: String!
  modified_date: DateTime
  note: String
  second_chunk_id: Int
  second_order: Boolean!
  second_post_id: Int
  second_pre_id: Int
  second_underlined: Boolean!
  sentence_audio_id: Int
  sentence_category_id: Int
  seventh_chunk_id: Int
  seventh_order: Boolean!
  seventh_post_id: Int
  seventh_pre_id: Int
  seventh_underlined: Boolean!
  sixth_chunk_id: Int
  sixth_order: Boolean!
  sixth_post_id: Int
  sixth_pre_id: Int
  sixth_underlined: Boolean!
  third_chunk_id: Int
  third_order: Boolean!
  third_post_id: Int
  third_pre_id: Int
  third_underlined: Boolean!
  to_check: String
  translation_language_id: Int
  translation_sentence_punctuation_end: String!
  translation_sentence_punctuation_start: String!
  updated_by_id: Int
}

type Sentences_sentence_hint @pgTable(name: \\"sentences_sentence_hints\\") {
  id: Int! @unique
  hint_id: Int!
  sentence_id: Int!
}

type Sentences_sentenceaudio @pgTable(name: \\"sentences_sentenceaudio\\") {
  id: Int! @unique
  audio_file: String
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  sentence_in_audio: String!
  updated_by_id: Int
}

type Sentences_sentencecategory @pgTable(name: \\"sentences_sentencecategory\\") {
  id: Int! @unique
  category_type: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_sentencegluer @pgTable(name: \\"sentences_sentencegluer\\") {
  id: Int! @unique
  learning_sentence_id: Int!
  translation_sentence_id: Int!
}

type Sentences_sentenceimage @pgTable(name: \\"sentences_sentenceimage\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  description: String!
  file: String
  image_category_id: Int!
  image_text_language_id: Int
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
}

type Sentences_sentencevideo @pgTable(name: \\"sentences_sentencevideo\\") {
  id: Int! @unique
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  description: String!
  file: String
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
  video_category_id: Int!
  video_thumbnail: String
}

type Sentences_videocategory @pgTable(name: \\"sentences_videocategory\\") {
  id: Int! @unique
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Socialaccount_socialaccount @pgTable(name: \\"socialaccount_socialaccount\\") {
  id: Int! @unique
  date_joined: DateTime!
  extra_data: String!
  last_login: DateTime!
  provider: String!
  uid: String!
  user_id: Int!
}

type Socialaccount_socialapp @pgTable(name: \\"socialaccount_socialapp\\") {
  id: Int! @unique
  client_id: String!
  key: String!
  name: String!
  provider: String!
  secret: String!
}

type Socialaccount_socialapp_site @pgTable(name: \\"socialaccount_socialapp_sites\\") {
  id: Int! @unique
  site_id: Int!
  socialapp_id: Int!
}

type Socialaccount_socialtoken @pgTable(name: \\"socialaccount_socialtoken\\") {
  id: Int! @unique
  account_id: Int!
  app_id: Int!
  expires_at: DateTime
  token: String!
  token_secret: String!
}

type Users_emailnotification @pgTable(name: \\"users_emailnotifications\\") {
  id: Int! @unique
  events: Boolean!
  new_features: Boolean!
  news: Boolean!
  progress: Boolean!
  promotions: Boolean!
  user_id: Int!
}

type Users_profile @pgTable(name: \\"users_profile\\") {
  id: Int! @unique
  censored_content: Boolean!
  country: String!
  date_of_birth: DateTime
  gender: String!
  learning_language_id: Int
  profile_picture: String!
  speaking_language_id: Int
}

type Users_spotssetting @pgTable(name: \\"users_spotssettings\\") {
  id: Int! @unique
  autoplay_sentence_audio: Boolean!
  autoplay_word_audio: Boolean!
  next_word_seconds: Int!
  play_videos: Boolean!
  reveal_seconds: Int!
  show_keyboard_shortcuts: Boolean!
  show_main_images: Boolean!
  show_submitted_images: Boolean!
  spots_page_auto: Boolean!
  user_id: Int!
}

type Users_subscription @pgTable(name: \\"users_subscription\\") {
  id: Int! @unique
  expiration_date: DateTime!
  expired: Boolean!
  subscription_type_id: Int!
}

type Users_subscriptiontype @pgTable(name: \\"users_subscriptiontype\\") {
  id: Int! @unique
  name: String!
  price: Float!
}

type Users_user @pgTable(name: \\"users_user\\") {
  id: Int! @unique
  date_joined: DateTime!
  email: String!
  first_name: String!
  first_time: Boolean!
  free_account: Boolean!
  is_active: Boolean!
  is_staff: Boolean!
  is_superuser: Boolean!
  last_login: DateTime
  last_name: String!
  password: String!
  profile_id: Int
  username: String!
}

type Users_user_group @pgTable(name: \\"users_user_groups\\") {
  id: Int! @unique
  group_id: Int!
  user_id: Int!
}

type Users_user_user_permission @pgTable(name: \\"users_user_user_permissions\\") {
  id: Int! @unique
  permission_id: Int!
  user_id: Int!
}

type Users_vocabularysetting @pgTable(name: \\"users_vocabularysettings\\") {
  id: Int! @unique
  sentence_audio_play_click: Boolean!
  show_keyboard_shortcuts: Boolean!
  user_id: Int!
  word_audio_play_click: Boolean!
}

type Words_chunk @pgTable(name: \\"words_chunk\\") {
  id: Int! @unique
  chunk_type_id: Int
  created_by_id: Int
  created_date: DateTime
  learning_word_id: Int!
  modified_date: DateTime
  note: String!
  translation_word_id: Int!
  updated_by_id: Int
  vocab: Boolean!
}

type Words_chunktype @pgTable(name: \\"words_chunktype\\") {
  id: Int! @unique
  chunk_type: String
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Words_englishword @pgTable(name: \\"words_englishword\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  definition: String!
  english_word_note: String!
  example_sentence: String!
  grammar_id: Int!
  modified_date: DateTime
  updated_by_id: Int
  word_in_english: String!
}

type Words_gender @pgTable(name: \\"words_gender\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  gender: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Words_grammar @pgTable(name: \\"words_grammar\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  examples: String!
  grammar_group: String!
  grammar_note: String!
  modified_date: DateTime
  name: String!
  syntax: String!
  tense_type_id: Int
  updated_by_id: Int
  user_grammar: String!
}

type Words_knownword @pgTable(name: \\"words_knownword\\") {
  id: Int! @unique
  created_at: DateTime!
  user_id: Int!
  word_id: Int!
}

type Words_masteredword @pgTable(name: \\"words_masteredword\\") {
  id: Int! @unique
  created_at: DateTime!
  user_id: Int!
  word_id: Int!
}

type Words_person @pgTable(name: \\"words_person\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  person: String!
  updated_by_id: Int
}

type Words_tensetype @pgTable(name: \\"words_tensetype\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  tense_type: String!
  updated_by_id: Int
}

type Words_word @pgTable(name: \\"words_word\\") {
  id: Int! @unique
  created_by_id: Int
  created_date: DateTime
  gender_id: Int
  modified_date: DateTime
  note: String!
  number: String
  person_id: Int
  updated_by_id: Int
  word: String!
  word_audio_id: Int
  word_grammar_id: Int
  word_in_english_id: Int!
  word_language_id: Int!
}

type Words_wordaudio @pgTable(name: \\"words_wordaudio\\") {
  id: Int! @unique
  audio_file: String
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  example_sentence: String!
  ipa: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
  word_in_audio: String!
}"
`;

exports[`Introspector issue4081 relations 2`] = `
"type About_aboutpage @db(name: \\"about_aboutpage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"about_aboutpage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading: String!
  heading_image: String!
  text: String!
}

type About_teammember @db(name: \\"about_teammember\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"about_teammember_id_seq\\", initialValue: 1, allocationSize: 1)
  description: String!
  facebook_url: String!
  instagram_url: String!
  name: String!
  order: Int!
  page_id: Int!
  picture: String!
  position: String!
  twitter_url: String!
  visible: Boolean!
  youtube_url: String!
}

type Account_emailaddress @db(name: \\"account_emailaddress\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"account_emailaddress_id_seq\\", initialValue: 1, allocationSize: 1)
  email: String!
  primary: Boolean!
  user_id: Int!
  verified: Boolean!
}

type Account_emailconfirmation @db(name: \\"account_emailconfirmation\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"account_emailconfirmation_id_seq\\", initialValue: 1, allocationSize: 1)
  created: DateTime!
  email_address_id: Int!
  key: String!
  sent: DateTime
}

type Auth_group @db(name: \\"auth_group\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"auth_group_id_seq\\", initialValue: 1, allocationSize: 1)
  name: String!
}

type Auth_group_permission @db(name: \\"auth_group_permissions\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"auth_group_permissions_id_seq\\", initialValue: 1, allocationSize: 1)
  group_id: Int!
  permission_id: Int!
}

type Auth_permission @db(name: \\"auth_permission\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"auth_permission_id_seq\\", initialValue: 1, allocationSize: 1)
  codename: String!
  content_type_id: Int!
  name: String!
}

type Contact_contactformcontent @db(name: \\"contact_contactformcontent\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"contact_contactform_id_seq\\", initialValue: 1, allocationSize: 1)
  title: String!
}

type Contact_contactpage @db(name: \\"contact_contactpage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"contact_contactpage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading: String!
  heading_image: String!
}

type Contact_thankyoupage @db(name: \\"contact_thankyoupage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"contact_thankyoupage_id_seq\\", initialValue: 1, allocationSize: 1)
  button_link: String!
  button_text: String!
  heading: String!
  text: String!
  title: String!
}

type Django_admin_log @db(name: \\"django_admin_log\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"django_admin_log_id_seq\\", initialValue: 1, allocationSize: 1)
  action_flag: Int!
  action_time: DateTime!
  change_message: String!
  content_type_id: Int
  object_id: String
  object_repr: String!
  user_id: Int!
}

type Django_content_type @db(name: \\"django_content_type\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"django_content_type_id_seq\\", initialValue: 1, allocationSize: 1)
  app_label: String!
  model: String!
}

type Django_migration @db(name: \\"django_migrations\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"django_migrations_id_seq\\", initialValue: 1, allocationSize: 1)
  app: String!
  applied: DateTime!
  name: String!
}

type Django_session @db(name: \\"django_session\\") {
  expire_date: DateTime!
  session_data: String!
  session_key: String!
}

type Django_site @db(name: \\"django_site\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"django_site_id_seq\\", initialValue: 1, allocationSize: 1)
  domain: String!
  name: String!
}

type Events_event @db(name: \\"events_event\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"events_event_id_seq\\", initialValue: 1, allocationSize: 1)
  address_line_one: String!
  address_line_two: String!
  city: String!
  country: String!
  date: DateTime!
  hosted_by: String!
  location_name: String!
  map_url: String!
  name: String!
  picture: String!
  # Type time is not supported
  # time: time!
  topic: String!
  visible: Boolean!
}

type Events_eventspage @db(name: \\"events_eventspage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"events_eventpage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading_image: String!
}

type Help_helppage @db(name: \\"help_helppage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"help_helppage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading: String!
  heading_image: String!
}

type Help_helpquestion @db(name: \\"help_helpquestion\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"help_helpquestion_id_seq\\", initialValue: 1, allocationSize: 1)
  answer: String!
  order: Int
  section_id: Int!
  thumbnail: String!
  title: String!
}

type Help_helpsection @db(name: \\"help_helpsection\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"help_helpsection_id_seq\\", initialValue: 1, allocationSize: 1)
  order: Int!
  page_id: Int!
  title: String!
}

type Jobs_job @db(name: \\"jobs_job\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"jobs_job_id_seq\\", initialValue: 1, allocationSize: 1)
  apply_page_form_title: String!
  apply_page_title: String!
  order: Int
  page_id: Int!
  picture: String!
  position_description: String!
  position_location: String!
  position_name: String!
  visible: Boolean!
}

type Jobs_jobspage @db(name: \\"jobs_jobspage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"jobs_jobspage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading: String!
  heading_image: String!
  text: String!
}

type Jobs_nojobspage @db(name: \\"jobs_nojobspage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"jobs_nojobspage_id_seq\\", initialValue: 1, allocationSize: 1)
  heading: String!
  text: String!
  title: String!
  video_thumbnail: String!
}

type Jobs_thankyoupage @db(name: \\"jobs_thankyoupage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"jobs_thankyoupage_id_seq\\", initialValue: 1, allocationSize: 1)
  button_link: String!
  button_text: String!
  heading: String!
  text: String!
  title: String!
}

type Landing_landingpage @db(name: \\"landing_landingpage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"landing_landingpage_id_seq\\", initialValue: 1, allocationSize: 1)
  section_four_image: String!
  section_four_text: String!
  section_four_title: String!
  section_one_image: String!
  section_one_title: String!
  section_three_image: String!
  section_three_text: String!
  section_three_title: String!
  section_two_image: String!
  section_two_text: String!
  section_two_title: String!
}

type Languages_language @db(name: \\"languages_language\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"languages_language_id_seq\\", initialValue: 1, allocationSize: 1)
  language: String!
  language_code: String!
}

type Media_artist @db(name: \\"media_artist\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_artist_id_seq\\", initialValue: 1, allocationSize: 1)
  artist: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_category @db(name: \\"media_category\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_category_id_seq\\", initialValue: 1, allocationSize: 1)
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_genre @db(name: \\"media_genre\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_genre_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  genre: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Media_media @db(name: \\"media_media\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_media_id_seq\\", initialValue: 1, allocationSize: 1)
  approved: Boolean!
  artist_id: Int!
  created_by_id: Int
  created_date: DateTime
  genre_id: Int
  media_language_id: Int!
  modified_date: DateTime
  note: String!
  region_id: Int
  title: String!
  translation_language_id: Int!
  updated_by_id: Int
}

type Media_media_category @db(name: \\"media_media_categories\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_media_categories_id_seq\\", initialValue: 1, allocationSize: 1)
  category_id: Int!
  media_id: Int!
}

type Media_mediasentence @db(name: \\"media_mediasentence\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_mediasentence_id_seq\\", initialValue: 1, allocationSize: 1)
  approved: Boolean!
  created_by_id: Int
  created_date: DateTime
  learning_sentence_id: Int!
  line: Int!
  lyrics_sentence: String!
  lyrics_translation: String!
  lyrics_translation_chunks: String!
  media_id: Int!
  modified_date: DateTime
  multiple: Boolean!
  note: String!
  order: Int!
  place_in_line: Int!
  repeat: Boolean!
  repeat_of_line: Int!
  repeated_in_line: String!
  updated_by_id: Int
  word_count: Int!
}

type Media_region @db(name: \\"media_region\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"media_region_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  region: String!
  updated_by_id: Int
}

type Sentences_customhint @db(name: \\"sentences_customhint\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_customhint_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  hint: String!
  hint_type_id: Int!
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
}

type Sentences_ecast @db(name: \\"sentences_ecast\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecast_id_seq\\", initialValue: 1, allocationSize: 1)
  action_id: Int!
  character_id: Int!
  created_by_id: Int
  created_date: DateTime
  description: String!
  emotion_id: Int!
  modified_date: DateTime
  note: String!
  sentence_id: Int!
  setting_id: Int!
  theme_id: Int
  updated_by_id: Int
}

type Sentences_ecastaction @db(name: \\"sentences_ecastaction\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecastaction_id_seq\\", initialValue: 1, allocationSize: 1)
  action: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastcharacter @db(name: \\"sentences_ecastcharacter\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecastcharacter_id_seq\\", initialValue: 1, allocationSize: 1)
  character: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastemotion @db(name: \\"sentences_ecastemotion\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecastemotion_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  emotion: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_ecastsetting @db(name: \\"sentences_ecastsetting\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecastsetting_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  setting: String!
  updated_by_id: Int
}

type Sentences_ecasttheme @db(name: \\"sentences_ecasttheme\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_ecasttheme_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  theme: String!
  updated_by_id: Int
}

type Sentences_hint @db(name: \\"sentences_hint\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_hint_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  hint: String!
  hint_type_id: Int!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_hinttype @db(name: \\"sentences_hinttype\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_hinttype_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  type_name: String!
  updated_by_id: Int
}

type Sentences_imagecategory @db(name: \\"sentences_imagecategory\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_imagecategory_id_seq\\", initialValue: 1, allocationSize: 1)
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_imagetype @db(name: \\"sentences_imagetype\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_imagetype_id_seq\\", initialValue: 1, allocationSize: 1)
  name: String!
}

type Sentences_posttranslationword @db(name: \\"sentences_posttranslationword\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_posttranslationword_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  language_id: Int
  modified_date: DateTime
  note: String!
  post: String!
  updated_by_id: Int
}

type Sentences_pretranslationword @db(name: \\"sentences_pretranslationword\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_pretranslationword_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  language_id: Int
  modified_date: DateTime
  note: String!
  pre: String!
  updated_by_id: Int
}

type Sentences_sentence @db(name: \\"sentences_sentence\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentence_id_seq\\", initialValue: 1, allocationSize: 1)
  approved: Boolean!
  chunk_id: Int
  created_by_id: Int
  created_date: DateTime
  english_sentence_punctuation_end: String!
  english_sentence_punctuation_start: String!
  fifth_chunk_id: Int
  fifth_order: Boolean!
  fifth_post_id: Int
  fifth_pre_id: Int
  fifth_underlined: Boolean!
  first_chunk_id: Int
  first_order: Boolean!
  first_post_id: Int
  first_pre_id: Int
  first_underlined: Boolean!
  fourth_chunk_id: Int
  fourth_order: Boolean!
  fourth_post_id: Int
  fourth_pre_id: Int
  fourth_underlined: Boolean!
  learning_language_id: Int
  learning_sentence_punctuation_end: String!
  learning_sentence_punctuation_start: String!
  modified_date: DateTime
  note: String
  second_chunk_id: Int
  second_order: Boolean!
  second_post_id: Int
  second_pre_id: Int
  second_underlined: Boolean!
  sentence_audio_id: Int
  sentence_category_id: Int
  seventh_chunk_id: Int
  seventh_order: Boolean!
  seventh_post_id: Int
  seventh_pre_id: Int
  seventh_underlined: Boolean!
  sixth_chunk_id: Int
  sixth_order: Boolean!
  sixth_post_id: Int
  sixth_pre_id: Int
  sixth_underlined: Boolean!
  third_chunk_id: Int
  third_order: Boolean!
  third_post_id: Int
  third_pre_id: Int
  third_underlined: Boolean!
  to_check: String
  translation_language_id: Int
  translation_sentence_punctuation_end: String!
  translation_sentence_punctuation_start: String!
  updated_by_id: Int
}

type Sentences_sentence_hint @db(name: \\"sentences_sentence_hints\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentence_hints_id_seq\\", initialValue: 1, allocationSize: 1)
  hint_id: Int!
  sentence_id: Int!
}

type Sentences_sentenceaudio @db(name: \\"sentences_sentenceaudio\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentenceaudio_id_seq\\", initialValue: 1, allocationSize: 1)
  audio_file: String
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  sentence_in_audio: String!
  updated_by_id: Int
}

type Sentences_sentencecategory @db(name: \\"sentences_sentencecategory\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentencecategory_id_seq\\", initialValue: 1, allocationSize: 1)
  category_type: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Sentences_sentencegluer @db(name: \\"sentences_sentencegluer\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentencegluer_id_seq\\", initialValue: 1, allocationSize: 1)
  learning_sentence_id: Int!
  translation_sentence_id: Int!
}

type Sentences_sentenceimage @db(name: \\"sentences_sentenceimage\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentenceimage_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  description: String!
  file: String
  image_category_id: Int!
  image_text_language_id: Int
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
}

type Sentences_sentencevideo @db(name: \\"sentences_sentencevideo\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_sentencevideo_id_seq\\", initialValue: 1, allocationSize: 1)
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  description: String!
  file: String
  modified_date: DateTime
  note: String!
  sentence_id: Int
  updated_by_id: Int
  video_category_id: Int!
  video_thumbnail: String
}

type Sentences_videocategory @db(name: \\"sentences_videocategory\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"sentences_videocategory_id_seq\\", initialValue: 1, allocationSize: 1)
  category: String!
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Socialaccount_socialaccount @db(name: \\"socialaccount_socialaccount\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"socialaccount_socialaccount_id_seq\\", initialValue: 1, allocationSize: 1)
  date_joined: DateTime!
  extra_data: String!
  last_login: DateTime!
  provider: String!
  uid: String!
  user_id: Int!
}

type Socialaccount_socialapp @db(name: \\"socialaccount_socialapp\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"socialaccount_socialapp_id_seq\\", initialValue: 1, allocationSize: 1)
  client_id: String!
  key: String!
  name: String!
  provider: String!
  secret: String!
}

type Socialaccount_socialapp_site @db(name: \\"socialaccount_socialapp_sites\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"socialaccount_socialapp_sites_id_seq\\", initialValue: 1, allocationSize: 1)
  site_id: Int!
  socialapp_id: Int!
}

type Socialaccount_socialtoken @db(name: \\"socialaccount_socialtoken\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"socialaccount_socialtoken_id_seq\\", initialValue: 1, allocationSize: 1)
  account_id: Int!
  app_id: Int!
  expires_at: DateTime
  token: String!
  token_secret: String!
}

type Users_emailnotification @db(name: \\"users_emailnotifications\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_emailnotifications_id_seq\\", initialValue: 1, allocationSize: 1)
  events: Boolean!
  new_features: Boolean!
  news: Boolean!
  progress: Boolean!
  promotions: Boolean!
  user_id: Int!
}

type Users_profile @db(name: \\"users_profile\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_profile_id_seq\\", initialValue: 1, allocationSize: 1)
  censored_content: Boolean!
  country: String!
  date_of_birth: DateTime
  gender: String!
  learning_language_id: Int
  profile_picture: String!
  speaking_language_id: Int
}

type Users_spotssetting @db(name: \\"users_spotssettings\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_spotssettings_id_seq\\", initialValue: 1, allocationSize: 1)
  autoplay_sentence_audio: Boolean!
  autoplay_word_audio: Boolean!
  next_word_seconds: Int!
  play_videos: Boolean!
  reveal_seconds: Int!
  show_keyboard_shortcuts: Boolean!
  show_main_images: Boolean!
  show_submitted_images: Boolean!
  spots_page_auto: Boolean!
  user_id: Int!
}

type Users_subscription @db(name: \\"users_subscription\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_subscription_id_seq\\", initialValue: 1, allocationSize: 1)
  expiration_date: DateTime!
  expired: Boolean!
  subscription_type_id: Int!
}

type Users_subscriptiontype @db(name: \\"users_subscriptiontype\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_subscriptiontype_id_seq\\", initialValue: 1, allocationSize: 1)
  name: String!
  price: Float!
}

type Users_user @db(name: \\"users_user\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_user_id_seq\\", initialValue: 1, allocationSize: 1)
  date_joined: DateTime!
  email: String!
  first_name: String!
  first_time: Boolean!
  free_account: Boolean!
  is_active: Boolean!
  is_staff: Boolean!
  is_superuser: Boolean!
  last_login: DateTime
  last_name: String!
  password: String!
  profile_id: Int
  username: String!
}

type Users_user_group @db(name: \\"users_user_groups\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_user_groups_id_seq\\", initialValue: 1, allocationSize: 1)
  group_id: Int!
  user_id: Int!
}

type Users_user_user_permission @db(name: \\"users_user_user_permissions\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_user_user_permissions_id_seq\\", initialValue: 1, allocationSize: 1)
  permission_id: Int!
  user_id: Int!
}

type Users_vocabularysetting @db(name: \\"users_vocabularysettings\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"users_vocabularysettings_id_seq\\", initialValue: 1, allocationSize: 1)
  sentence_audio_play_click: Boolean!
  show_keyboard_shortcuts: Boolean!
  user_id: Int!
  word_audio_play_click: Boolean!
}

type Words_chunk @db(name: \\"words_chunk\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_chunk_id_seq\\", initialValue: 1, allocationSize: 1)
  chunk_type_id: Int
  created_by_id: Int
  created_date: DateTime
  learning_word_id: Int!
  modified_date: DateTime
  note: String!
  translation_word_id: Int!
  updated_by_id: Int
  vocab: Boolean!
}

type Words_chunktype @db(name: \\"words_chunktype\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_chunktype_id_seq\\", initialValue: 1, allocationSize: 1)
  chunk_type: String
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Words_englishword @db(name: \\"words_englishword\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_englishword_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  definition: String!
  english_word_note: String!
  example_sentence: String!
  grammar_id: Int!
  modified_date: DateTime
  updated_by_id: Int
  word_in_english: String!
}

type Words_gender @db(name: \\"words_gender\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_gender_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  gender: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
}

type Words_grammar @db(name: \\"words_grammar\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_grammar_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  examples: String!
  grammar_group: String!
  grammar_note: String!
  modified_date: DateTime
  name: String!
  syntax: String!
  tense_type_id: Int
  updated_by_id: Int
  user_grammar: String!
}

type Words_knownword @db(name: \\"words_knownword\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_knownword_id_seq\\", initialValue: 1, allocationSize: 1)
  created_at: DateTime!
  user_id: Int!
  word_id: Int!
}

type Words_masteredword @db(name: \\"words_masteredword\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_masteredword_id_seq\\", initialValue: 1, allocationSize: 1)
  created_at: DateTime!
  user_id: Int!
  word_id: Int!
}

type Words_person @db(name: \\"words_person\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_person_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  person: String!
  updated_by_id: Int
}

type Words_tensetype @db(name: \\"words_tensetype\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_tensetype_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  modified_date: DateTime
  note: String!
  tense_type: String!
  updated_by_id: Int
}

type Words_word @db(name: \\"words_word\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_word_id_seq\\", initialValue: 1, allocationSize: 1)
  created_by_id: Int
  created_date: DateTime
  gender_id: Int
  modified_date: DateTime
  note: String!
  number: String
  person_id: Int
  updated_by_id: Int
  word: String!
  word_audio_id: Int
  word_grammar_id: Int
  word_in_english_id: Int!
  word_language_id: Int!
}

type Words_wordaudio @db(name: \\"words_wordaudio\\") {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: \\"words_wordaudio_id_seq\\", initialValue: 1, allocationSize: 1)
  audio_file: String
  audio_language_id: Int!
  created_by_id: Int
  created_date: DateTime
  example_sentence: String!
  ipa: String!
  modified_date: DateTime
  note: String!
  updated_by_id: Int
  word_in_audio: String!
}"
`;
