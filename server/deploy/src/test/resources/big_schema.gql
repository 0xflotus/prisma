type A implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldB: B! @relation(name:"AOnB")
	fieldC: C! @relation(name:"AOnC")
	fieldD: D! @relation(name:"AOnD")
	fieldE: E! @relation(name:"AOnE")
	fieldF: F! @relation(name:"AOnF")
	fieldG: G! @relation(name:"AOnG")
	fieldH: H! @relation(name:"AOnH")
	fieldI: I! @relation(name:"AOnI")
	fieldJ: J! @relation(name:"AOnJ")
	fieldK: K! @relation(name:"AOnK")
	fieldL: L! @relation(name:"AOnL")
	fieldM: M! @relation(name:"AOnM")
	fieldN: N! @relation(name:"AOnN")
	fieldO: O! @relation(name:"AOnO")
	fieldP: P! @relation(name:"AOnP")
	fieldQ: Q! @relation(name:"AOnQ")
	fieldR: R! @relation(name:"AOnR")
	fieldS: S! @relation(name:"AOnS")
	fieldT: T! @relation(name:"AOnT")
	fieldU: U! @relation(name:"AOnU")
	fieldV: V! @relation(name:"AOnV")
	fieldW: W! @relation(name:"AOnW")
	fieldX: X! @relation(name:"AOnX")
	fieldY: Y! @relation(name:"AOnY")
	fieldZ: Z! @relation(name:"AOnZ")
	fieldAA: AA! @relation(name:"AOnAA")
	fieldAB: AB! @relation(name:"AOnAB")
	fieldAC: AC! @relation(name:"AOnAC")
	fieldAD: AD! @relation(name:"AOnAD")
}

type B implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnB")
	fieldC: C! @relation(name:"BOnC")
	fieldD: D! @relation(name:"BOnD")
	fieldE: E! @relation(name:"BOnE")
	fieldF: F! @relation(name:"BOnF")
	fieldG: G! @relation(name:"BOnG")
	fieldH: H! @relation(name:"BOnH")
	fieldI: I! @relation(name:"BOnI")
	fieldJ: J! @relation(name:"BOnJ")
	fieldK: K! @relation(name:"BOnK")
	fieldL: L! @relation(name:"BOnL")
	fieldM: M! @relation(name:"BOnM")
	fieldN: N! @relation(name:"BOnN")
	fieldO: O! @relation(name:"BOnO")
	fieldP: P! @relation(name:"BOnP")
	fieldQ: Q! @relation(name:"BOnQ")
	fieldR: R! @relation(name:"BOnR")
	fieldS: S! @relation(name:"BOnS")
	fieldT: T! @relation(name:"BOnT")
	fieldU: U! @relation(name:"BOnU")
	fieldV: V! @relation(name:"BOnV")
	fieldW: W! @relation(name:"BOnW")
	fieldX: X! @relation(name:"BOnX")
	fieldY: Y! @relation(name:"BOnY")
	fieldZ: Z! @relation(name:"BOnZ")
	fieldAA: AA! @relation(name:"AAOnB")
	fieldAB: AB! @relation(name:"ABOnB")
	fieldAC: AC! @relation(name:"ACOnB")
	fieldAD: AD! @relation(name:"ADOnB")
}

type C implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnC")
	fieldB: B! @relation(name:"BOnC")
	fieldD: D! @relation(name:"COnD")
	fieldE: E! @relation(name:"COnE")
	fieldF: F! @relation(name:"COnF")
	fieldG: G! @relation(name:"COnG")
	fieldH: H! @relation(name:"COnH")
	fieldI: I! @relation(name:"COnI")
	fieldJ: J! @relation(name:"COnJ")
	fieldK: K! @relation(name:"COnK")
	fieldL: L! @relation(name:"COnL")
	fieldM: M! @relation(name:"COnM")
	fieldN: N! @relation(name:"COnN")
	fieldO: O! @relation(name:"COnO")
	fieldP: P! @relation(name:"COnP")
	fieldQ: Q! @relation(name:"COnQ")
	fieldR: R! @relation(name:"COnR")
	fieldS: S! @relation(name:"COnS")
	fieldT: T! @relation(name:"COnT")
	fieldU: U! @relation(name:"COnU")
	fieldV: V! @relation(name:"COnV")
	fieldW: W! @relation(name:"COnW")
	fieldX: X! @relation(name:"COnX")
	fieldY: Y! @relation(name:"COnY")
	fieldZ: Z! @relation(name:"COnZ")
	fieldAA: AA! @relation(name:"AAOnC")
	fieldAB: AB! @relation(name:"ABOnC")
	fieldAC: AC! @relation(name:"ACOnC")
	fieldAD: AD! @relation(name:"ADOnC")
}

type D implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnD")
	fieldB: B! @relation(name:"BOnD")
	fieldC: C! @relation(name:"COnD")
	fieldE: E! @relation(name:"DOnE")
	fieldF: F! @relation(name:"DOnF")
	fieldG: G! @relation(name:"DOnG")
	fieldH: H! @relation(name:"DOnH")
	fieldI: I! @relation(name:"DOnI")
	fieldJ: J! @relation(name:"DOnJ")
	fieldK: K! @relation(name:"DOnK")
	fieldL: L! @relation(name:"DOnL")
	fieldM: M! @relation(name:"DOnM")
	fieldN: N! @relation(name:"DOnN")
	fieldO: O! @relation(name:"DOnO")
	fieldP: P! @relation(name:"DOnP")
	fieldQ: Q! @relation(name:"DOnQ")
	fieldR: R! @relation(name:"DOnR")
	fieldS: S! @relation(name:"DOnS")
	fieldT: T! @relation(name:"DOnT")
	fieldU: U! @relation(name:"DOnU")
	fieldV: V! @relation(name:"DOnV")
	fieldW: W! @relation(name:"DOnW")
	fieldX: X! @relation(name:"DOnX")
	fieldY: Y! @relation(name:"DOnY")
	fieldZ: Z! @relation(name:"DOnZ")
	fieldAA: AA! @relation(name:"AAOnD")
	fieldAB: AB! @relation(name:"ABOnD")
	fieldAC: AC! @relation(name:"ACOnD")
	fieldAD: AD! @relation(name:"ADOnD")
}

type E implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnE")
	fieldB: B! @relation(name:"BOnE")
	fieldC: C! @relation(name:"COnE")
	fieldD: D! @relation(name:"DOnE")
	fieldF: F! @relation(name:"EOnF")
	fieldG: G! @relation(name:"EOnG")
	fieldH: H! @relation(name:"EOnH")
	fieldI: I! @relation(name:"EOnI")
	fieldJ: J! @relation(name:"EOnJ")
	fieldK: K! @relation(name:"EOnK")
	fieldL: L! @relation(name:"EOnL")
	fieldM: M! @relation(name:"EOnM")
	fieldN: N! @relation(name:"EOnN")
	fieldO: O! @relation(name:"EOnO")
	fieldP: P! @relation(name:"EOnP")
	fieldQ: Q! @relation(name:"EOnQ")
	fieldR: R! @relation(name:"EOnR")
	fieldS: S! @relation(name:"EOnS")
	fieldT: T! @relation(name:"EOnT")
	fieldU: U! @relation(name:"EOnU")
	fieldV: V! @relation(name:"EOnV")
	fieldW: W! @relation(name:"EOnW")
	fieldX: X! @relation(name:"EOnX")
	fieldY: Y! @relation(name:"EOnY")
	fieldZ: Z! @relation(name:"EOnZ")
	fieldAA: AA! @relation(name:"AAOnE")
	fieldAB: AB! @relation(name:"ABOnE")
	fieldAC: AC! @relation(name:"ACOnE")
	fieldAD: AD! @relation(name:"ADOnE")
}

type F implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnF")
	fieldB: B! @relation(name:"BOnF")
	fieldC: C! @relation(name:"COnF")
	fieldD: D! @relation(name:"DOnF")
	fieldE: E! @relation(name:"EOnF")
	fieldG: G! @relation(name:"FOnG")
	fieldH: H! @relation(name:"FOnH")
	fieldI: I! @relation(name:"FOnI")
	fieldJ: J! @relation(name:"FOnJ")
	fieldK: K! @relation(name:"FOnK")
	fieldL: L! @relation(name:"FOnL")
	fieldM: M! @relation(name:"FOnM")
	fieldN: N! @relation(name:"FOnN")
	fieldO: O! @relation(name:"FOnO")
	fieldP: P! @relation(name:"FOnP")
	fieldQ: Q! @relation(name:"FOnQ")
	fieldR: R! @relation(name:"FOnR")
	fieldS: S! @relation(name:"FOnS")
	fieldT: T! @relation(name:"FOnT")
	fieldU: U! @relation(name:"FOnU")
	fieldV: V! @relation(name:"FOnV")
	fieldW: W! @relation(name:"FOnW")
	fieldX: X! @relation(name:"FOnX")
	fieldY: Y! @relation(name:"FOnY")
	fieldZ: Z! @relation(name:"FOnZ")
	fieldAA: AA! @relation(name:"AAOnF")
	fieldAB: AB! @relation(name:"ABOnF")
	fieldAC: AC! @relation(name:"ACOnF")
	fieldAD: AD! @relation(name:"ADOnF")
}

type G implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnG")
	fieldB: B! @relation(name:"BOnG")
	fieldC: C! @relation(name:"COnG")
	fieldD: D! @relation(name:"DOnG")
	fieldE: E! @relation(name:"EOnG")
	fieldF: F! @relation(name:"FOnG")
	fieldH: H! @relation(name:"GOnH")
	fieldI: I! @relation(name:"GOnI")
	fieldJ: J! @relation(name:"GOnJ")
	fieldK: K! @relation(name:"GOnK")
	fieldL: L! @relation(name:"GOnL")
	fieldM: M! @relation(name:"GOnM")
	fieldN: N! @relation(name:"GOnN")
	fieldO: O! @relation(name:"GOnO")
	fieldP: P! @relation(name:"GOnP")
	fieldQ: Q! @relation(name:"GOnQ")
	fieldR: R! @relation(name:"GOnR")
	fieldS: S! @relation(name:"GOnS")
	fieldT: T! @relation(name:"GOnT")
	fieldU: U! @relation(name:"GOnU")
	fieldV: V! @relation(name:"GOnV")
	fieldW: W! @relation(name:"GOnW")
	fieldX: X! @relation(name:"GOnX")
	fieldY: Y! @relation(name:"GOnY")
	fieldZ: Z! @relation(name:"GOnZ")
	fieldAA: AA! @relation(name:"AAOnG")
	fieldAB: AB! @relation(name:"ABOnG")
	fieldAC: AC! @relation(name:"ACOnG")
	fieldAD: AD! @relation(name:"ADOnG")
}

type H implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnH")
	fieldB: B! @relation(name:"BOnH")
	fieldC: C! @relation(name:"COnH")
	fieldD: D! @relation(name:"DOnH")
	fieldE: E! @relation(name:"EOnH")
	fieldF: F! @relation(name:"FOnH")
	fieldG: G! @relation(name:"GOnH")
	fieldI: I! @relation(name:"HOnI")
	fieldJ: J! @relation(name:"HOnJ")
	fieldK: K! @relation(name:"HOnK")
	fieldL: L! @relation(name:"HOnL")
	fieldM: M! @relation(name:"HOnM")
	fieldN: N! @relation(name:"HOnN")
	fieldO: O! @relation(name:"HOnO")
	fieldP: P! @relation(name:"HOnP")
	fieldQ: Q! @relation(name:"HOnQ")
	fieldR: R! @relation(name:"HOnR")
	fieldS: S! @relation(name:"HOnS")
	fieldT: T! @relation(name:"HOnT")
	fieldU: U! @relation(name:"HOnU")
	fieldV: V! @relation(name:"HOnV")
	fieldW: W! @relation(name:"HOnW")
	fieldX: X! @relation(name:"HOnX")
	fieldY: Y! @relation(name:"HOnY")
	fieldZ: Z! @relation(name:"HOnZ")
	fieldAA: AA! @relation(name:"AAOnH")
	fieldAB: AB! @relation(name:"ABOnH")
	fieldAC: AC! @relation(name:"ACOnH")
	fieldAD: AD! @relation(name:"ADOnH")
}

type I implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnI")
	fieldB: B! @relation(name:"BOnI")
	fieldC: C! @relation(name:"COnI")
	fieldD: D! @relation(name:"DOnI")
	fieldE: E! @relation(name:"EOnI")
	fieldF: F! @relation(name:"FOnI")
	fieldG: G! @relation(name:"GOnI")
	fieldH: H! @relation(name:"HOnI")
	fieldJ: J! @relation(name:"IOnJ")
	fieldK: K! @relation(name:"IOnK")
	fieldL: L! @relation(name:"IOnL")
	fieldM: M! @relation(name:"IOnM")
	fieldN: N! @relation(name:"IOnN")
	fieldO: O! @relation(name:"IOnO")
	fieldP: P! @relation(name:"IOnP")
	fieldQ: Q! @relation(name:"IOnQ")
	fieldR: R! @relation(name:"IOnR")
	fieldS: S! @relation(name:"IOnS")
	fieldT: T! @relation(name:"IOnT")
	fieldU: U! @relation(name:"IOnU")
	fieldV: V! @relation(name:"IOnV")
	fieldW: W! @relation(name:"IOnW")
	fieldX: X! @relation(name:"IOnX")
	fieldY: Y! @relation(name:"IOnY")
	fieldZ: Z! @relation(name:"IOnZ")
	fieldAA: AA! @relation(name:"AAOnI")
	fieldAB: AB! @relation(name:"ABOnI")
	fieldAC: AC! @relation(name:"ACOnI")
	fieldAD: AD! @relation(name:"ADOnI")
}

type J implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnJ")
	fieldB: B! @relation(name:"BOnJ")
	fieldC: C! @relation(name:"COnJ")
	fieldD: D! @relation(name:"DOnJ")
	fieldE: E! @relation(name:"EOnJ")
	fieldF: F! @relation(name:"FOnJ")
	fieldG: G! @relation(name:"GOnJ")
	fieldH: H! @relation(name:"HOnJ")
	fieldI: I! @relation(name:"IOnJ")
	fieldK: K! @relation(name:"JOnK")
	fieldL: L! @relation(name:"JOnL")
	fieldM: M! @relation(name:"JOnM")
	fieldN: N! @relation(name:"JOnN")
	fieldO: O! @relation(name:"JOnO")
	fieldP: P! @relation(name:"JOnP")
	fieldQ: Q! @relation(name:"JOnQ")
	fieldR: R! @relation(name:"JOnR")
	fieldS: S! @relation(name:"JOnS")
	fieldT: T! @relation(name:"JOnT")
	fieldU: U! @relation(name:"JOnU")
	fieldV: V! @relation(name:"JOnV")
	fieldW: W! @relation(name:"JOnW")
	fieldX: X! @relation(name:"JOnX")
	fieldY: Y! @relation(name:"JOnY")
	fieldZ: Z! @relation(name:"JOnZ")
	fieldAA: AA! @relation(name:"AAOnJ")
	fieldAB: AB! @relation(name:"ABOnJ")
	fieldAC: AC! @relation(name:"ACOnJ")
	fieldAD: AD! @relation(name:"ADOnJ")
}

type K implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnK")
	fieldB: B! @relation(name:"BOnK")
	fieldC: C! @relation(name:"COnK")
	fieldD: D! @relation(name:"DOnK")
	fieldE: E! @relation(name:"EOnK")
	fieldF: F! @relation(name:"FOnK")
	fieldG: G! @relation(name:"GOnK")
	fieldH: H! @relation(name:"HOnK")
	fieldI: I! @relation(name:"IOnK")
	fieldJ: J! @relation(name:"JOnK")
	fieldL: L! @relation(name:"KOnL")
	fieldM: M! @relation(name:"KOnM")
	fieldN: N! @relation(name:"KOnN")
	fieldO: O! @relation(name:"KOnO")
	fieldP: P! @relation(name:"KOnP")
	fieldQ: Q! @relation(name:"KOnQ")
	fieldR: R! @relation(name:"KOnR")
	fieldS: S! @relation(name:"KOnS")
	fieldT: T! @relation(name:"KOnT")
	fieldU: U! @relation(name:"KOnU")
	fieldV: V! @relation(name:"KOnV")
	fieldW: W! @relation(name:"KOnW")
	fieldX: X! @relation(name:"KOnX")
	fieldY: Y! @relation(name:"KOnY")
	fieldZ: Z! @relation(name:"KOnZ")
	fieldAA: AA! @relation(name:"AAOnK")
	fieldAB: AB! @relation(name:"ABOnK")
	fieldAC: AC! @relation(name:"ACOnK")
	fieldAD: AD! @relation(name:"ADOnK")
}

type L implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnL")
	fieldB: B! @relation(name:"BOnL")
	fieldC: C! @relation(name:"COnL")
	fieldD: D! @relation(name:"DOnL")
	fieldE: E! @relation(name:"EOnL")
	fieldF: F! @relation(name:"FOnL")
	fieldG: G! @relation(name:"GOnL")
	fieldH: H! @relation(name:"HOnL")
	fieldI: I! @relation(name:"IOnL")
	fieldJ: J! @relation(name:"JOnL")
	fieldK: K! @relation(name:"KOnL")
	fieldM: M! @relation(name:"LOnM")
	fieldN: N! @relation(name:"LOnN")
	fieldO: O! @relation(name:"LOnO")
	fieldP: P! @relation(name:"LOnP")
	fieldQ: Q! @relation(name:"LOnQ")
	fieldR: R! @relation(name:"LOnR")
	fieldS: S! @relation(name:"LOnS")
	fieldT: T! @relation(name:"LOnT")
	fieldU: U! @relation(name:"LOnU")
	fieldV: V! @relation(name:"LOnV")
	fieldW: W! @relation(name:"LOnW")
	fieldX: X! @relation(name:"LOnX")
	fieldY: Y! @relation(name:"LOnY")
	fieldZ: Z! @relation(name:"LOnZ")
	fieldAA: AA! @relation(name:"AAOnL")
	fieldAB: AB! @relation(name:"ABOnL")
	fieldAC: AC! @relation(name:"ACOnL")
	fieldAD: AD! @relation(name:"ADOnL")
}

type M implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnM")
	fieldB: B! @relation(name:"BOnM")
	fieldC: C! @relation(name:"COnM")
	fieldD: D! @relation(name:"DOnM")
	fieldE: E! @relation(name:"EOnM")
	fieldF: F! @relation(name:"FOnM")
	fieldG: G! @relation(name:"GOnM")
	fieldH: H! @relation(name:"HOnM")
	fieldI: I! @relation(name:"IOnM")
	fieldJ: J! @relation(name:"JOnM")
	fieldK: K! @relation(name:"KOnM")
	fieldL: L! @relation(name:"LOnM")
	fieldN: N! @relation(name:"MOnN")
	fieldO: O! @relation(name:"MOnO")
	fieldP: P! @relation(name:"MOnP")
	fieldQ: Q! @relation(name:"MOnQ")
	fieldR: R! @relation(name:"MOnR")
	fieldS: S! @relation(name:"MOnS")
	fieldT: T! @relation(name:"MOnT")
	fieldU: U! @relation(name:"MOnU")
	fieldV: V! @relation(name:"MOnV")
	fieldW: W! @relation(name:"MOnW")
	fieldX: X! @relation(name:"MOnX")
	fieldY: Y! @relation(name:"MOnY")
	fieldZ: Z! @relation(name:"MOnZ")
	fieldAA: AA! @relation(name:"AAOnM")
	fieldAB: AB! @relation(name:"ABOnM")
	fieldAC: AC! @relation(name:"ACOnM")
	fieldAD: AD! @relation(name:"ADOnM")
}

type N implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnN")
	fieldB: B! @relation(name:"BOnN")
	fieldC: C! @relation(name:"COnN")
	fieldD: D! @relation(name:"DOnN")
	fieldE: E! @relation(name:"EOnN")
	fieldF: F! @relation(name:"FOnN")
	fieldG: G! @relation(name:"GOnN")
	fieldH: H! @relation(name:"HOnN")
	fieldI: I! @relation(name:"IOnN")
	fieldJ: J! @relation(name:"JOnN")
	fieldK: K! @relation(name:"KOnN")
	fieldL: L! @relation(name:"LOnN")
	fieldM: M! @relation(name:"MOnN")
	fieldO: O! @relation(name:"NOnO")
	fieldP: P! @relation(name:"NOnP")
	fieldQ: Q! @relation(name:"NOnQ")
	fieldR: R! @relation(name:"NOnR")
	fieldS: S! @relation(name:"NOnS")
	fieldT: T! @relation(name:"NOnT")
	fieldU: U! @relation(name:"NOnU")
	fieldV: V! @relation(name:"NOnV")
	fieldW: W! @relation(name:"NOnW")
	fieldX: X! @relation(name:"NOnX")
	fieldY: Y! @relation(name:"NOnY")
	fieldZ: Z! @relation(name:"NOnZ")
	fieldAA: AA! @relation(name:"AAOnN")
	fieldAB: AB! @relation(name:"ABOnN")
	fieldAC: AC! @relation(name:"ACOnN")
	fieldAD: AD! @relation(name:"ADOnN")
}

type O implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnO")
	fieldB: B! @relation(name:"BOnO")
	fieldC: C! @relation(name:"COnO")
	fieldD: D! @relation(name:"DOnO")
	fieldE: E! @relation(name:"EOnO")
	fieldF: F! @relation(name:"FOnO")
	fieldG: G! @relation(name:"GOnO")
	fieldH: H! @relation(name:"HOnO")
	fieldI: I! @relation(name:"IOnO")
	fieldJ: J! @relation(name:"JOnO")
	fieldK: K! @relation(name:"KOnO")
	fieldL: L! @relation(name:"LOnO")
	fieldM: M! @relation(name:"MOnO")
	fieldN: N! @relation(name:"NOnO")
	fieldP: P! @relation(name:"OOnP")
	fieldQ: Q! @relation(name:"OOnQ")
	fieldR: R! @relation(name:"OOnR")
	fieldS: S! @relation(name:"OOnS")
	fieldT: T! @relation(name:"OOnT")
	fieldU: U! @relation(name:"OOnU")
	fieldV: V! @relation(name:"OOnV")
	fieldW: W! @relation(name:"OOnW")
	fieldX: X! @relation(name:"OOnX")
	fieldY: Y! @relation(name:"OOnY")
	fieldZ: Z! @relation(name:"OOnZ")
	fieldAA: AA! @relation(name:"AAOnO")
	fieldAB: AB! @relation(name:"ABOnO")
	fieldAC: AC! @relation(name:"ACOnO")
	fieldAD: AD! @relation(name:"ADOnO")
}

type P implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnP")
	fieldB: B! @relation(name:"BOnP")
	fieldC: C! @relation(name:"COnP")
	fieldD: D! @relation(name:"DOnP")
	fieldE: E! @relation(name:"EOnP")
	fieldF: F! @relation(name:"FOnP")
	fieldG: G! @relation(name:"GOnP")
	fieldH: H! @relation(name:"HOnP")
	fieldI: I! @relation(name:"IOnP")
	fieldJ: J! @relation(name:"JOnP")
	fieldK: K! @relation(name:"KOnP")
	fieldL: L! @relation(name:"LOnP")
	fieldM: M! @relation(name:"MOnP")
	fieldN: N! @relation(name:"NOnP")
	fieldO: O! @relation(name:"OOnP")
	fieldQ: Q! @relation(name:"POnQ")
	fieldR: R! @relation(name:"POnR")
	fieldS: S! @relation(name:"POnS")
	fieldT: T! @relation(name:"POnT")
	fieldU: U! @relation(name:"POnU")
	fieldV: V! @relation(name:"POnV")
	fieldW: W! @relation(name:"POnW")
	fieldX: X! @relation(name:"POnX")
	fieldY: Y! @relation(name:"POnY")
	fieldZ: Z! @relation(name:"POnZ")
	fieldAA: AA! @relation(name:"AAOnP")
	fieldAB: AB! @relation(name:"ABOnP")
	fieldAC: AC! @relation(name:"ACOnP")
	fieldAD: AD! @relation(name:"ADOnP")
}

type Q implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnQ")
	fieldB: B! @relation(name:"BOnQ")
	fieldC: C! @relation(name:"COnQ")
	fieldD: D! @relation(name:"DOnQ")
	fieldE: E! @relation(name:"EOnQ")
	fieldF: F! @relation(name:"FOnQ")
	fieldG: G! @relation(name:"GOnQ")
	fieldH: H! @relation(name:"HOnQ")
	fieldI: I! @relation(name:"IOnQ")
	fieldJ: J! @relation(name:"JOnQ")
	fieldK: K! @relation(name:"KOnQ")
	fieldL: L! @relation(name:"LOnQ")
	fieldM: M! @relation(name:"MOnQ")
	fieldN: N! @relation(name:"NOnQ")
	fieldO: O! @relation(name:"OOnQ")
	fieldP: P! @relation(name:"POnQ")
	fieldR: R! @relation(name:"QOnR")
	fieldS: S! @relation(name:"QOnS")
	fieldT: T! @relation(name:"QOnT")
	fieldU: U! @relation(name:"QOnU")
	fieldV: V! @relation(name:"QOnV")
	fieldW: W! @relation(name:"QOnW")
	fieldX: X! @relation(name:"QOnX")
	fieldY: Y! @relation(name:"QOnY")
	fieldZ: Z! @relation(name:"QOnZ")
	fieldAA: AA! @relation(name:"AAOnQ")
	fieldAB: AB! @relation(name:"ABOnQ")
	fieldAC: AC! @relation(name:"ACOnQ")
	fieldAD: AD! @relation(name:"ADOnQ")
}

type R implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnR")
	fieldB: B! @relation(name:"BOnR")
	fieldC: C! @relation(name:"COnR")
	fieldD: D! @relation(name:"DOnR")
	fieldE: E! @relation(name:"EOnR")
	fieldF: F! @relation(name:"FOnR")
	fieldG: G! @relation(name:"GOnR")
	fieldH: H! @relation(name:"HOnR")
	fieldI: I! @relation(name:"IOnR")
	fieldJ: J! @relation(name:"JOnR")
	fieldK: K! @relation(name:"KOnR")
	fieldL: L! @relation(name:"LOnR")
	fieldM: M! @relation(name:"MOnR")
	fieldN: N! @relation(name:"NOnR")
	fieldO: O! @relation(name:"OOnR")
	fieldP: P! @relation(name:"POnR")
	fieldQ: Q! @relation(name:"QOnR")
	fieldS: S! @relation(name:"ROnS")
	fieldT: T! @relation(name:"ROnT")
	fieldU: U! @relation(name:"ROnU")
	fieldV: V! @relation(name:"ROnV")
	fieldW: W! @relation(name:"ROnW")
	fieldX: X! @relation(name:"ROnX")
	fieldY: Y! @relation(name:"ROnY")
	fieldZ: Z! @relation(name:"ROnZ")
	fieldAA: AA! @relation(name:"AAOnR")
	fieldAB: AB! @relation(name:"ABOnR")
	fieldAC: AC! @relation(name:"ACOnR")
	fieldAD: AD! @relation(name:"ADOnR")
}

type S implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnS")
	fieldB: B! @relation(name:"BOnS")
	fieldC: C! @relation(name:"COnS")
	fieldD: D! @relation(name:"DOnS")
	fieldE: E! @relation(name:"EOnS")
	fieldF: F! @relation(name:"FOnS")
	fieldG: G! @relation(name:"GOnS")
	fieldH: H! @relation(name:"HOnS")
	fieldI: I! @relation(name:"IOnS")
	fieldJ: J! @relation(name:"JOnS")
	fieldK: K! @relation(name:"KOnS")
	fieldL: L! @relation(name:"LOnS")
	fieldM: M! @relation(name:"MOnS")
	fieldN: N! @relation(name:"NOnS")
	fieldO: O! @relation(name:"OOnS")
	fieldP: P! @relation(name:"POnS")
	fieldQ: Q! @relation(name:"QOnS")
	fieldR: R! @relation(name:"ROnS")
	fieldT: T! @relation(name:"SOnT")
	fieldU: U! @relation(name:"SOnU")
	fieldV: V! @relation(name:"SOnV")
	fieldW: W! @relation(name:"SOnW")
	fieldX: X! @relation(name:"SOnX")
	fieldY: Y! @relation(name:"SOnY")
	fieldZ: Z! @relation(name:"SOnZ")
	fieldAA: AA! @relation(name:"AAOnS")
	fieldAB: AB! @relation(name:"ABOnS")
	fieldAC: AC! @relation(name:"ACOnS")
	fieldAD: AD! @relation(name:"ADOnS")
}

type T implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnT")
	fieldB: B! @relation(name:"BOnT")
	fieldC: C! @relation(name:"COnT")
	fieldD: D! @relation(name:"DOnT")
	fieldE: E! @relation(name:"EOnT")
	fieldF: F! @relation(name:"FOnT")
	fieldG: G! @relation(name:"GOnT")
	fieldH: H! @relation(name:"HOnT")
	fieldI: I! @relation(name:"IOnT")
	fieldJ: J! @relation(name:"JOnT")
	fieldK: K! @relation(name:"KOnT")
	fieldL: L! @relation(name:"LOnT")
	fieldM: M! @relation(name:"MOnT")
	fieldN: N! @relation(name:"NOnT")
	fieldO: O! @relation(name:"OOnT")
	fieldP: P! @relation(name:"POnT")
	fieldQ: Q! @relation(name:"QOnT")
	fieldR: R! @relation(name:"ROnT")
	fieldS: S! @relation(name:"SOnT")
	fieldU: U! @relation(name:"TOnU")
	fieldV: V! @relation(name:"TOnV")
	fieldW: W! @relation(name:"TOnW")
	fieldX: X! @relation(name:"TOnX")
	fieldY: Y! @relation(name:"TOnY")
	fieldZ: Z! @relation(name:"TOnZ")
	fieldAA: AA! @relation(name:"AAOnT")
	fieldAB: AB! @relation(name:"ABOnT")
	fieldAC: AC! @relation(name:"ACOnT")
	fieldAD: AD! @relation(name:"ADOnT")
}

type U implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnU")
	fieldB: B! @relation(name:"BOnU")
	fieldC: C! @relation(name:"COnU")
	fieldD: D! @relation(name:"DOnU")
	fieldE: E! @relation(name:"EOnU")
	fieldF: F! @relation(name:"FOnU")
	fieldG: G! @relation(name:"GOnU")
	fieldH: H! @relation(name:"HOnU")
	fieldI: I! @relation(name:"IOnU")
	fieldJ: J! @relation(name:"JOnU")
	fieldK: K! @relation(name:"KOnU")
	fieldL: L! @relation(name:"LOnU")
	fieldM: M! @relation(name:"MOnU")
	fieldN: N! @relation(name:"NOnU")
	fieldO: O! @relation(name:"OOnU")
	fieldP: P! @relation(name:"POnU")
	fieldQ: Q! @relation(name:"QOnU")
	fieldR: R! @relation(name:"ROnU")
	fieldS: S! @relation(name:"SOnU")
	fieldT: T! @relation(name:"TOnU")
	fieldV: V! @relation(name:"UOnV")
	fieldW: W! @relation(name:"UOnW")
	fieldX: X! @relation(name:"UOnX")
	fieldY: Y! @relation(name:"UOnY")
	fieldZ: Z! @relation(name:"UOnZ")
	fieldAA: AA! @relation(name:"AAOnU")
	fieldAB: AB! @relation(name:"ABOnU")
	fieldAC: AC! @relation(name:"ACOnU")
	fieldAD: AD! @relation(name:"ADOnU")
}

type V implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnV")
	fieldB: B! @relation(name:"BOnV")
	fieldC: C! @relation(name:"COnV")
	fieldD: D! @relation(name:"DOnV")
	fieldE: E! @relation(name:"EOnV")
	fieldF: F! @relation(name:"FOnV")
	fieldG: G! @relation(name:"GOnV")
	fieldH: H! @relation(name:"HOnV")
	fieldI: I! @relation(name:"IOnV")
	fieldJ: J! @relation(name:"JOnV")
	fieldK: K! @relation(name:"KOnV")
	fieldL: L! @relation(name:"LOnV")
	fieldM: M! @relation(name:"MOnV")
	fieldN: N! @relation(name:"NOnV")
	fieldO: O! @relation(name:"OOnV")
	fieldP: P! @relation(name:"POnV")
	fieldQ: Q! @relation(name:"QOnV")
	fieldR: R! @relation(name:"ROnV")
	fieldS: S! @relation(name:"SOnV")
	fieldT: T! @relation(name:"TOnV")
	fieldU: U! @relation(name:"UOnV")
	fieldW: W! @relation(name:"VOnW")
	fieldX: X! @relation(name:"VOnX")
	fieldY: Y! @relation(name:"VOnY")
	fieldZ: Z! @relation(name:"VOnZ")
	fieldAA: AA! @relation(name:"AAOnV")
	fieldAB: AB! @relation(name:"ABOnV")
	fieldAC: AC! @relation(name:"ACOnV")
	fieldAD: AD! @relation(name:"ADOnV")
}

type W implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnW")
	fieldB: B! @relation(name:"BOnW")
	fieldC: C! @relation(name:"COnW")
	fieldD: D! @relation(name:"DOnW")
	fieldE: E! @relation(name:"EOnW")
	fieldF: F! @relation(name:"FOnW")
	fieldG: G! @relation(name:"GOnW")
	fieldH: H! @relation(name:"HOnW")
	fieldI: I! @relation(name:"IOnW")
	fieldJ: J! @relation(name:"JOnW")
	fieldK: K! @relation(name:"KOnW")
	fieldL: L! @relation(name:"LOnW")
	fieldM: M! @relation(name:"MOnW")
	fieldN: N! @relation(name:"NOnW")
	fieldO: O! @relation(name:"OOnW")
	fieldP: P! @relation(name:"POnW")
	fieldQ: Q! @relation(name:"QOnW")
	fieldR: R! @relation(name:"ROnW")
	fieldS: S! @relation(name:"SOnW")
	fieldT: T! @relation(name:"TOnW")
	fieldU: U! @relation(name:"UOnW")
	fieldV: V! @relation(name:"VOnW")
	fieldX: X! @relation(name:"WOnX")
	fieldY: Y! @relation(name:"WOnY")
	fieldZ: Z! @relation(name:"WOnZ")
	fieldAA: AA! @relation(name:"AAOnW")
	fieldAB: AB! @relation(name:"ABOnW")
	fieldAC: AC! @relation(name:"ACOnW")
	fieldAD: AD! @relation(name:"ADOnW")
}

type X implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnX")
	fieldB: B! @relation(name:"BOnX")
	fieldC: C! @relation(name:"COnX")
	fieldD: D! @relation(name:"DOnX")
	fieldE: E! @relation(name:"EOnX")
	fieldF: F! @relation(name:"FOnX")
	fieldG: G! @relation(name:"GOnX")
	fieldH: H! @relation(name:"HOnX")
	fieldI: I! @relation(name:"IOnX")
	fieldJ: J! @relation(name:"JOnX")
	fieldK: K! @relation(name:"KOnX")
	fieldL: L! @relation(name:"LOnX")
	fieldM: M! @relation(name:"MOnX")
	fieldN: N! @relation(name:"NOnX")
	fieldO: O! @relation(name:"OOnX")
	fieldP: P! @relation(name:"POnX")
	fieldQ: Q! @relation(name:"QOnX")
	fieldR: R! @relation(name:"ROnX")
	fieldS: S! @relation(name:"SOnX")
	fieldT: T! @relation(name:"TOnX")
	fieldU: U! @relation(name:"UOnX")
	fieldV: V! @relation(name:"VOnX")
	fieldW: W! @relation(name:"WOnX")
	fieldY: Y! @relation(name:"XOnY")
	fieldZ: Z! @relation(name:"XOnZ")
	fieldAA: AA! @relation(name:"AAOnX")
	fieldAB: AB! @relation(name:"ABOnX")
	fieldAC: AC! @relation(name:"ACOnX")
	fieldAD: AD! @relation(name:"ADOnX")
}

type Y implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnY")
	fieldB: B! @relation(name:"BOnY")
	fieldC: C! @relation(name:"COnY")
	fieldD: D! @relation(name:"DOnY")
	fieldE: E! @relation(name:"EOnY")
	fieldF: F! @relation(name:"FOnY")
	fieldG: G! @relation(name:"GOnY")
	fieldH: H! @relation(name:"HOnY")
	fieldI: I! @relation(name:"IOnY")
	fieldJ: J! @relation(name:"JOnY")
	fieldK: K! @relation(name:"KOnY")
	fieldL: L! @relation(name:"LOnY")
	fieldM: M! @relation(name:"MOnY")
	fieldN: N! @relation(name:"NOnY")
	fieldO: O! @relation(name:"OOnY")
	fieldP: P! @relation(name:"POnY")
	fieldQ: Q! @relation(name:"QOnY")
	fieldR: R! @relation(name:"ROnY")
	fieldS: S! @relation(name:"SOnY")
	fieldT: T! @relation(name:"TOnY")
	fieldU: U! @relation(name:"UOnY")
	fieldV: V! @relation(name:"VOnY")
	fieldW: W! @relation(name:"WOnY")
	fieldX: X! @relation(name:"XOnY")
	fieldZ: Z! @relation(name:"YOnZ")
	fieldAA: AA! @relation(name:"AAOnY")
	fieldAB: AB! @relation(name:"ABOnY")
	fieldAC: AC! @relation(name:"ACOnY")
	fieldAD: AD! @relation(name:"ADOnY")
}

type Z implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnZ")
	fieldB: B! @relation(name:"BOnZ")
	fieldC: C! @relation(name:"COnZ")
	fieldD: D! @relation(name:"DOnZ")
	fieldE: E! @relation(name:"EOnZ")
	fieldF: F! @relation(name:"FOnZ")
	fieldG: G! @relation(name:"GOnZ")
	fieldH: H! @relation(name:"HOnZ")
	fieldI: I! @relation(name:"IOnZ")
	fieldJ: J! @relation(name:"JOnZ")
	fieldK: K! @relation(name:"KOnZ")
	fieldL: L! @relation(name:"LOnZ")
	fieldM: M! @relation(name:"MOnZ")
	fieldN: N! @relation(name:"NOnZ")
	fieldO: O! @relation(name:"OOnZ")
	fieldP: P! @relation(name:"POnZ")
	fieldQ: Q! @relation(name:"QOnZ")
	fieldR: R! @relation(name:"ROnZ")
	fieldS: S! @relation(name:"SOnZ")
	fieldT: T! @relation(name:"TOnZ")
	fieldU: U! @relation(name:"UOnZ")
	fieldV: V! @relation(name:"VOnZ")
	fieldW: W! @relation(name:"WOnZ")
	fieldX: X! @relation(name:"XOnZ")
	fieldY: Y! @relation(name:"YOnZ")
	fieldAA: AA! @relation(name:"AAOnZ")
	fieldAB: AB! @relation(name:"ABOnZ")
	fieldAC: AC! @relation(name:"ACOnZ")
	fieldAD: AD! @relation(name:"ADOnZ")
}

type AA implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnAA")
	fieldB: B! @relation(name:"AAOnB")
	fieldC: C! @relation(name:"AAOnC")
	fieldD: D! @relation(name:"AAOnD")
	fieldE: E! @relation(name:"AAOnE")
	fieldF: F! @relation(name:"AAOnF")
	fieldG: G! @relation(name:"AAOnG")
	fieldH: H! @relation(name:"AAOnH")
	fieldI: I! @relation(name:"AAOnI")
	fieldJ: J! @relation(name:"AAOnJ")
	fieldK: K! @relation(name:"AAOnK")
	fieldL: L! @relation(name:"AAOnL")
	fieldM: M! @relation(name:"AAOnM")
	fieldN: N! @relation(name:"AAOnN")
	fieldO: O! @relation(name:"AAOnO")
	fieldP: P! @relation(name:"AAOnP")
	fieldQ: Q! @relation(name:"AAOnQ")
	fieldR: R! @relation(name:"AAOnR")
	fieldS: S! @relation(name:"AAOnS")
	fieldT: T! @relation(name:"AAOnT")
	fieldU: U! @relation(name:"AAOnU")
	fieldV: V! @relation(name:"AAOnV")
	fieldW: W! @relation(name:"AAOnW")
	fieldX: X! @relation(name:"AAOnX")
	fieldY: Y! @relation(name:"AAOnY")
	fieldZ: Z! @relation(name:"AAOnZ")
	fieldAB: AB! @relation(name:"AAOnAB")
	fieldAC: AC! @relation(name:"AAOnAC")
	fieldAD: AD! @relation(name:"AAOnAD")
}

type AB implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnAB")
	fieldB: B! @relation(name:"ABOnB")
	fieldC: C! @relation(name:"ABOnC")
	fieldD: D! @relation(name:"ABOnD")
	fieldE: E! @relation(name:"ABOnE")
	fieldF: F! @relation(name:"ABOnF")
	fieldG: G! @relation(name:"ABOnG")
	fieldH: H! @relation(name:"ABOnH")
	fieldI: I! @relation(name:"ABOnI")
	fieldJ: J! @relation(name:"ABOnJ")
	fieldK: K! @relation(name:"ABOnK")
	fieldL: L! @relation(name:"ABOnL")
	fieldM: M! @relation(name:"ABOnM")
	fieldN: N! @relation(name:"ABOnN")
	fieldO: O! @relation(name:"ABOnO")
	fieldP: P! @relation(name:"ABOnP")
	fieldQ: Q! @relation(name:"ABOnQ")
	fieldR: R! @relation(name:"ABOnR")
	fieldS: S! @relation(name:"ABOnS")
	fieldT: T! @relation(name:"ABOnT")
	fieldU: U! @relation(name:"ABOnU")
	fieldV: V! @relation(name:"ABOnV")
	fieldW: W! @relation(name:"ABOnW")
	fieldX: X! @relation(name:"ABOnX")
	fieldY: Y! @relation(name:"ABOnY")
	fieldZ: Z! @relation(name:"ABOnZ")
	fieldAA: AA! @relation(name:"AAOnAB")
	fieldAC: AC! @relation(name:"ABOnAC")
	fieldAD: AD! @relation(name:"ABOnAD")
}

type AC implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnAC")
	fieldB: B! @relation(name:"ACOnB")
	fieldC: C! @relation(name:"ACOnC")
	fieldD: D! @relation(name:"ACOnD")
	fieldE: E! @relation(name:"ACOnE")
	fieldF: F! @relation(name:"ACOnF")
	fieldG: G! @relation(name:"ACOnG")
	fieldH: H! @relation(name:"ACOnH")
	fieldI: I! @relation(name:"ACOnI")
	fieldJ: J! @relation(name:"ACOnJ")
	fieldK: K! @relation(name:"ACOnK")
	fieldL: L! @relation(name:"ACOnL")
	fieldM: M! @relation(name:"ACOnM")
	fieldN: N! @relation(name:"ACOnN")
	fieldO: O! @relation(name:"ACOnO")
	fieldP: P! @relation(name:"ACOnP")
	fieldQ: Q! @relation(name:"ACOnQ")
	fieldR: R! @relation(name:"ACOnR")
	fieldS: S! @relation(name:"ACOnS")
	fieldT: T! @relation(name:"ACOnT")
	fieldU: U! @relation(name:"ACOnU")
	fieldV: V! @relation(name:"ACOnV")
	fieldW: W! @relation(name:"ACOnW")
	fieldX: X! @relation(name:"ACOnX")
	fieldY: Y! @relation(name:"ACOnY")
	fieldZ: Z! @relation(name:"ACOnZ")
	fieldAA: AA! @relation(name:"AAOnAC")
	fieldAB: AB! @relation(name:"ABOnAC")
	fieldAD: AD! @relation(name:"ACOnAD")
}

type AD implements Node {
    id: ID! @isUnique
    field1: String!
    field2: String
    field3: [Int]
    fieldA: A! @relation(name:"AOnAD")
	fieldB: B! @relation(name:"ADOnB")
	fieldC: C! @relation(name:"ADOnC")
	fieldD: D! @relation(name:"ADOnD")
	fieldE: E! @relation(name:"ADOnE")
	fieldF: F! @relation(name:"ADOnF")
	fieldG: G! @relation(name:"ADOnG")
	fieldH: H! @relation(name:"ADOnH")
	fieldI: I! @relation(name:"ADOnI")
	fieldJ: J! @relation(name:"ADOnJ")
	fieldK: K! @relation(name:"ADOnK")
	fieldL: L! @relation(name:"ADOnL")
	fieldM: M! @relation(name:"ADOnM")
	fieldN: N! @relation(name:"ADOnN")
	fieldO: O! @relation(name:"ADOnO")
	fieldP: P! @relation(name:"ADOnP")
	fieldQ: Q! @relation(name:"ADOnQ")
	fieldR: R! @relation(name:"ADOnR")
	fieldS: S! @relation(name:"ADOnS")
	fieldT: T! @relation(name:"ADOnT")
	fieldU: U! @relation(name:"ADOnU")
	fieldV: V! @relation(name:"ADOnV")
	fieldW: W! @relation(name:"ADOnW")
	fieldX: X! @relation(name:"ADOnX")
	fieldY: Y! @relation(name:"ADOnY")
	fieldZ: Z! @relation(name:"ADOnZ")
	fieldAA: AA! @relation(name:"AAOnAD")
	fieldAB: AB! @relation(name:"ABOnAD")
	fieldAC: AC! @relation(name:"ACOnAD")
}

